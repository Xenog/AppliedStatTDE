plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[100,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[1,1],0.2, "0.2226549", col = 'red')
dev.off()
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[100,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[1,1],0.2, "0.2226549", col = 'red')
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[100,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[1,1],0.2, "0.2226549", col = 'red')
#Differentiating treatments
x11()
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[100,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[1,1],0.2, "0.2226549", col = 'red')
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[95,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[5,1],0.2, "0.2226549", col = 'red')
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[95,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[5,1],0.2, "0.2226549", col = 'red')
x11()
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[95,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[5,1],0.2, "0.2226549", col = 'red')
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[50,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[50,1],0.2, "0.2226549", col = 'red')
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$kltrt, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[50,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[50,1],0.2, "0.2226549", col = 'red')
x11()
df <- DF
df <- df[which(df$cycno == 3 & df$trt == 'Reg-C'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$kltrt, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
abline(h = max(newdat$histo_resp), col = 'red')
text(newdat[50,1],0.5, "0.4632615", col = 'red')
abline(h = min(newdat$histo_resp) , col = 'red')
text(newdat[50,1],0.2, "0.2226549", col = 'red')
#No differentiating treatments
x11()
df <- DF
df <- df[which((df$cycno == 3 & df$trt == 'Reg-C') | (df$cycno == 4 & df$trt == 'Reg-DI')),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$kltrt, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
#########################################################
View(DF)
View(DF)
View(DF)
help(save)
save(DF, file = "BigMamaframe.RData")
dim(DF)
save(DF, file = "BigMamaframe.RData")
save(DF, file = "BigMamaframes.RData")
save(DF, file = "BigMamaframe.RData")
df <- DF
df <- df[which(df$cycno == 4 & df$trt == 'Reg-DI'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
newdat
#No differentiating treatments
x11()
df <- DF
df <- df[which((df$cycno == 3 & df$trt == 'Reg-C') | (df$cycno == 4 & df$trt == 'Reg-DI')),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$kltrt, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
newdat
x11()
par(mfrow = c(3,2))
for(cyc in 1:6){
df <- DF
df <- df[which(df$cycno == cyc),]
fit = glm(trtfact ~ totox, data=df, family=binomial)
newdat <- data.frame(totox=seq(min(df$totox), max(df$totox),len=100))
newdat$trtfact = predict(fit, newdata=newdat, type="response")
plot(trtfact~totox, data=df, col=df$klsex, pch = 16)
lines(trtfact ~ totox, newdat, col="green4", lwd=2)
}
summary(fit)
summary(newdat)
newdat
fit$fitted.values
cyc
df <- DF
df <- df[which(df$cycno == cyc),]
fit = glm(trtfact ~ totox, data=df, family=binomial)
df
fit$fitted.values
dim(fitted.values())
dim(fit$fitted.values
)
length(fit$fitted.values)
length(df[which(df$cycno == 6),])
dim(df[which(df$cycno == 6),])
length(df[which(df$cycno == 6),]$trtfact)
df <- DF
df <- df[which((df$cycno == 3 & df$trt == 'Reg-C') | (df$cycno == 4 & df$trt == 'Reg-DI')),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
summary(fit)
PseudoR2(fit)
roc_curve <- roc(df$histo_resp,fit$fitted.values,
smoothed = FALSE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
df$histo_resp
fit$fitted.values
df <- DF
df <- na.omit(df)
df <- df[which(df$cycno == 4 & df$trt == 'Reg-DI'),]
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
summary(fit)
```{r}
#install.packages("e1071")
library('e1071')
#install.packages('caTools')
library(caTools)
#help(svm)
```
#install.packages("e1071")
library('e1071')
#install.packages('caTools')
library(caTools)
#help(svm)
dat <- subset(DF, select = c('cycno','rRDI_cumdose', 'meanmax','histo_resp'))
dat <- dat[which(dat$cycno == 4),-1]
dat<-na.omit(dat)
set.seed(124)
split = sample.split(dat$death, SplitRatio = 0.8)
dat
dat <- subset(DF, select = c('cycno','rRDI_cumdose', 'meanmax','histo_resp'))
dat <- dat[which(dat$cycno == 4),-1]
dat<-na.omit(dat)
set.seed(124)
split = sample.split(dat$histo_resp SplitRatio = 0.8)
dat <- subset(DF, select = c('cycno','rRDI_cumdose', 'meanmax','histo_resp'))
dat <- dat[which(dat$cycno == 4),-1]
dat<-na.omit(dat)
set.seed(124)
split = sample.split(dat$histo_resp, SplitRatio = 0.8)
training_set = subset(dat, split == TRUE)
test_set = subset(dat, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
classifier = svm(formula = death ~ .,
data = training_set,
type = 'C-classification',
kernel = 'linear')
install.packages('StatPerMeCo')
plot(classifier, training_set)
help(svm)
library('e1071')
#install.packages('caTools')
library(caTools)
help(svm)
View(surgery_fup)
View(chemo_tox)
help(setwd)
setwd('C:\Users\gianm\Desktop\Applied Statistics\OldExams')
setwd('C:\Users\gianm\Desktop\Applied Statistics\OldExams')
before <- subset(biomarkers3, ntest_cyc == 1, select = c("patid", "cycno","WBC", "NEUT", "PLT"))
middle <- subset(biomarkers3, ntest_cyc == 2, select = c("patid", "cycno","WBC", "NEUT", "PLT"))
after <- subset(biomarkers3, ntest_cyc == 3, select = c("patid", "cycno","WBC", "NEUT", "PLT"))
x11()
par(mfrow=c(3,2))
for(i in 1:6){
plot((before[which(before$cycno == i), names(before) %in% c("WBC")]),before[which(before$cycno == i), names(before) %in% c("NEUT")],
xlab =cat("White Blood Count at cycle no. ",i), ylab =cat("Neutrophils at cycle no. ",i), main = cat("Cycle no. ", i))
}
x11()
par(mfrow=c(3,2))
for(i in 1:6){
plot((middle[which(before$cycno == i), names(before) %in% c("NEUT")]),middle[which(before$cycno == i), names(before) %in% c("PLT")],
xlab =cat("White Blood Count at cycle no. ",i), ylab =cat("Neutrophils at cycle no. ",i), main = cat("Cycle no. ", i))
}
fit = glm(histo_resp ~ meanmax, data=df, family=binomial)
newdat <- data.frame(meanmax=seq(min(df$meanmax), max(df$meanmax),len=100))
newdat$histo_resp = predict(fit, newdata=newdat, type="response")
plot(histo_resp~meanmax, data=df, col=df$klsex, pch = 16)
lines(histo_resp ~ meanmax, newdat, col="green4", lwd=2)
N =2262
DF <- chemo_tox
DF$ren1 <- biomarkers1$ren1
DF$alk1 <- biomarkers1$alk1
DF$ldh1 <- biomarkers1$ldh1
DF$cal1 <- biomarkers1$cal1
DF$mag1 <- biomarkers1$mag1
DF$WBC.b <- rep(NA,N)
DF$NEUT.b <- rep(NA,N)
DF$PLT.b <- rep(NA,N)
DF$time.b <- rep(NA,N)
DF$WBC.m <- rep(NA,N)
DF$NEUT.m <- rep(NA,N)
DF$PLT.m <- rep(NA,N)
DF$time.m <- rep(NA,N)
DF$WBC.a <- rep(NA,N)
DF$NEUT.a <- rep(NA,N)
DF$PLT.a <- rep(NA,N)
DF$time.a <- rep(NA,N)
DF$age_in <- rep(NA,N)
for(i in DF$patid){
k <- biomarkers3[which( biomarkers3$patid == i & biomarkers3$ntest_cyc == 1),names(biomarkers3) %in% c('cycno','WBC', 'NEUT', 'PLT', 'time')]
for(j in k$cycno){
DF[which(DF$patid == i & DF$cycno == j), ]$time.b <- k[which(k$cycno == j),]$time
DF[which(DF$patid == i & DF$cycno == j), ]$WBC.b <- k[which(k$cycno == j),]$WBC
DF[which(DF$patid == i & DF$cycno == j), ]$NEUT.b <- k[which(k$cycno == j),]$NEUT
DF[which(DF$patid == i & DF$cycno == j), ]$PLT.b <- k[which(k$cycno == j),]$PLT
}
}
for(i in DF$patid){
k <- biomarkers3[which( biomarkers3$patid == i & biomarkers3$ntest_cyc == 1),names(biomarkers3) %in% c('cycno','WBC', 'NEUT', 'PLT', 'time')]
for(j in k$cycno){
DF[which(DF$patid == i & DF$cycno == j), ]$time.b <- k[which(k$cycno == j),]$time
DF[which(DF$patid == i & DF$cycno == j), ]$WBC.b <- k[which(k$cycno == j),]$WBC
DF[which(DF$patid == i & DF$cycno == j), ]$NEUT.b <- k[which(k$cycno == j),]$NEUT
DF[which(DF$patid == i & DF$cycno == j), ]$PLT.b <- k[which(k$cycno == j),]$PLT
}
}
for(i in DF$patid){
k <- biomarkers3[which( biomarkers3$patid == i & biomarkers3$ntest_cyc == 2),names(biomarkers3) %in% c('cycno','WBC', 'NEUT', 'PLT', 'time')]
for(j in k$cycno){
DF[which(DF$patid == i & DF$cycno == j), ]$time.m <- k[which(k$cycno == j),]$time
DF[which(DF$patid == i & DF$cycno == j), ]$WBC.m <- k[which(k$cycno == j),]$WBC
DF[which(DF$patid == i & DF$cycno == j), ]$NEUT.m <- k[which(k$cycno == j),]$NEUT
DF[which(DF$patid == i & DF$cycno == j), ]$PLT.m <- k[which(k$cycno == j),]$PLT
}
}
for(i in DF$patid){
k <- biomarkers3[which( biomarkers3$patid == i & biomarkers3$ntest_cyc == 3),names(biomarkers3) %in% c('cycno','WBC', 'NEUT', 'PLT', 'time')]
for(j in k$cycno){
DF[which(DF$patid == i & DF$cycno == j), ]$time.a <- k[which(k$cycno == j),]$time
DF[which(DF$patid == i & DF$cycno == j), ]$WBC.a <- k[which(k$cycno == j),]$WBC
DF[which(DF$patid == i & DF$cycno == j), ]$NEUT.a <- k[which(k$cycno == j),]$NEUT
DF[which(DF$patid == i & DF$cycno == j), ]$PLT.a <- k[which(k$cycno == j),]$PLT
}
}
for(i in baseline$patid){
DF[which(DF$patid == i),]$age_in <- baseline[which(baseline$patid == i),]$age_in
}
Col = c('green','lightblue','blue','orange','red')
#COLOR VARIABLES
DF$kl <- rep(NA, N)
DF[which(DF$naus == 0),]$kl <- 'green'
DF[which(DF$naus == 1),]$kl <- 'lightblue'
DF[which(DF$naus == 2),]$kl <- 'blue'
DF[which(DF$naus == 3),]$kl <- 'orange'
DF[which(DF$naus == 4),]$kl <- 'red'
par(mfrow = c(3,2))
for( i in DF$patid){
x = DF[which(DF$patid == i), names(DF) %in% c('time.b')]
y = DF[which(DF$patid == i), names(DF) %in% c('WBC.b')]
if(DF[which(DF$patid == i),'trt'][1] == 'Reg-C'){
kl = 'blue'
}
if(DF[which(DF$patid == i),'trt'][1] == 'Reg-DI'){
kl = 'red'
}
if(baseline[which(baseline$patid == i),'age_cat'][1] == 'less than 15'){
plot(x,y, type = 'l', xlab = 'time', ylab = 'WBC', xlim = c(0,175), ylim = c(0,100), col = kl, main = '< 15years, red = Reg-DI, blue = Reg-C')
par(new = TRUE)
}
}
par(new = FALSE)
setwd("C:/Users/gianm/Desktop/TDEApplied/Old exams (in Italian)/040713")
rm(list = ls())
inp <- read.table('risoimport.txt')
exp <- read.table('risoexport.txt')
head(inp)
head(exp)
dim(inp)
head(exp)
dim(exp)
load('mcshapiro.test.RData')
inp <- read.table('risoimport.txt')
exp <- read.table('risoexport.txt')
head(inp)
head(exp)
dim(inp)
dim(exp)
mcshapiro.test(exp)
mcshapiro.test(inp)
cols = c()
for(i in 1:5){
cols = c(cols, inp[,i]-exp[,i])
}
cols
cols = c()
for(i in 1:5){
cols = cbind(cols, inp[,i]-exp[,i])
}
cols
D <- data.frame(cols)
D
head(inp)
names(D) <- colnames(inp)
head(D)
mcshapiro.test(D)
plot(riso)
matplot(inp)
matplot(D, type = 'l')
help(t.test)
t.test(D)
t.test(D, mu = 0)
n <- dim(D)[1]  # 11
p <- dim(D)[2]  #  2
D.mean   <- sapply(D,mean)
D.cov    <- cov(D)
D.invcov <- solve(D.cov)
alpha   <- .05
delta.0 <- c(0,0,0,0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject H0 at level 5%
# we compute the p-value
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
# reject H0 at 5% (don't reject at 1%)
D.T2
P
IC.T2 <- c()
for(i in 1:5){
IC.T2 <- rbind( IC.T2, D.mean[i]-sqrt(cfr.fisher*D.cov[i,i]/n) , D.mean[i], D.mean[i]+sqrt(cfr.fisher*D.cov[i,i]/n) )
}
dimnames(T2)[[2]] <- c('inf','center','sup')
T2
# there's difference
IC.T2 <- c()
for(i in 1:5){
IC.T2 <- rbind( IC.T2, D.mean[i]-sqrt(cfr.fisher*D.cov[i,i]/n) , D.mean[i], D.mean[i]+sqrt(cfr.fisher*D.cov[i,i]/n) )
}
IC.T2
IC.T2 <- c()
for(i in 1:5){
IC.T2 <- rbind( IC.T2, c(D.mean[i]-sqrt(cfr.fisher*D.cov[i,i]/n) , D.mean[i], D.mean[i]+sqrt(cfr.fisher*D.cov[i,i]/n)) )
}
IC.T2
M.inp <- (inp[,1]+inp[,2]+inp[,3]+inp[,4]+inp[,5])/5
M.exp <- (exp[,1]+exp[,2]+exp[,3]+exp[,4]+exp[,5])/5
M.exp
plot(M.exp)
density(M.exp)
Dm <- M.inp - M.exp
n <- dim(D)[1]
p <- 6
D.mean   <- c(sapply(D,mean),Dm)
plot(Dm)
M.inp <- (inp[,1]+inp[,2]+inp[,3]+inp[,4]+inp[,5])/5
M.exp <- (exp[,1]+exp[,2]+exp[,3]+exp[,4]+exp[,5])/5
Dm <- M.inp - M.exp
n <- dim(D)[1]
p <- 6
D$diff <- Dm
D.mean   <- sapply(D,mean)
D.invcov <- solve(D.cov)
alpha   <- .05
delta.0 <- c(0,0,0,0,0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject H0 at level 5%
# we compute the p-value
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
IC.T2 <- c()
for(i in 1:6){
IC.T2 <- rbind( IC.T2, c(D.mean[i]-sqrt(cfr.fisher*D.cov[i,i]/n) , D.mean[i], D.mean[i]+sqrt(cfr.fisher*D.cov[i,i]/n)) )
}
IC.T2
D
D
M.inp <- (inp[,1]+inp[,2]+inp[,3]+inp[,4]+inp[,5])/5
M.exp <- (exp[,1]+exp[,2]+exp[,3]+exp[,4]+exp[,5])/5
Dm <- M.inp - M.exp
n <- dim(D)[1]
p <- 6
D$diff <- Dm
D.mean   <- sapply(D,mean)
D.cov    <- cov(D)
D.invcov <- solve(D.cov)
alpha   <- .05
delta.0 <- c(0,0,0,0,0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject H0 at level 5%
# we compute the p-value
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
IC.T2 <- c()
for(i in 1:6){
IC.T2 <- rbind( IC.T2, c(D.mean[i]-sqrt(cfr.fisher*D.cov[i,i]/n) , D.mean[i], D.mean[i]+sqrt(cfr.fisher*D.cov[i,i]/n)) )
}
IC.T2
abline(h = -3.038595)
abline(h = -2.945635)
allergy <- read.table('hatingalmonds.txt')
head(allergy)
dim(allergy)
noallergy <- read.table('lovingalmonds.txt')
head(noallergy)
dim(noallergy)
n1 <- dim(allergy)[1]
n2 <- dim(noallergy)[1]
p <- dim(noallergy)[2]
x.mean1 <- sapply(allergy, mean)
x.mean2 <- sapply(noallergy, mean)
p.hat <- (x.mean1*n1+x.mean2*n2)/(n1+n2)
x.var <- (p.hat*(1-p.hat))
# Test: H0.i: mu.i1 == mu.i2  vs H1.i: mui1 != mu.i2
z.i <- (x.mean1-x.mean2)/sqrt(x.var*(1/n1+1/n2))
p.i <- ifelse(z.i<0, 2*pnorm(z.i),2*(1-pnorm(z.i)))
which(p.i<.01)
# Bonferoni test
k <- 520
which(p.i*k<.01)
# or
p.Bf <- p.adjust(p.i, method='bonferroni')
which(p.Bf<.01)
# Benjamini-Hockberg (control the false discovery rate)
p.BH <- p.adjust(p.i, method='BH')
which(p.BH<.01)
x11(width=21, height=7)
par(mfrow=c(1,3))
plot(p.i, main='Univariate')
abline(h=.01, lwd=2, col='red')
plot(p.Bf, main='Corrected - Bonferroni')
abline(h=.01, lwd=2, col='red')
plot(p.BH, main='Corrected - BH')
abline(h=.01, lwd=2, col='red')
