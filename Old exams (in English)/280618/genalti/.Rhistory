m2 <- mean(price[area == 'Guanajato'])
m3 <- mean(price[area == 'Cancun'])
DF <- mod$df
Spooled <- sum(mod$res^2)/DF
alpha <- 0.01
k     <- 3
N     <- length(price)
BF    <- rbind(c(m1 -m2 - sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF),
m1 -m2 + sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF)),
c(m1 -m3 - sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF),
m1 -m3 + sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF)),
c(m3 -m2 - sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF),
m3 -m2 + sqrt(Spooled / N) * qt(1 - alpha / (2*k), DF))
)
#99% conf. interval for the mean differences of prices between areas:
# MC - Guanajato = [-19.70089,  10.33089]
# MC - Cancun    = [-325.78159, -295.74981]
# Cancun - Guanajato = [291.06481,  321.09659]
detach(df)
df <- read.table("Precolombian.txt")
(list = ls())
rm(list = ls())
df <- read.table("Precolombian.txt")
head(df)
df$Civilization
levels(df$)
levels(df$Civilization)
#"Aztec"  "Maya"   "Toltec"
priors = c(0.2,0.1,0.7)
#"Aztec"  "Maya"   "Toltec"
priors = c(0.2, 0.1, 0.7)
library(MASS)
head(df)
mod1 <- lda(Civilization ~ Year + Aspect.Ratio, data = df, priors = priors)
mod1
#"Aztec"  "Maya"   "Toltec"
plot(df[,1], df[,2], pch = 16, col = df[,3])
dev.off()
#"Aztec"  "Maya"   "Toltec"
plot(df[,1], df[,2], pch = 16, col = df[,3])
preds <- predict(mod1, df)
table(df[,3], preds1)
mod1 <- lda(Civilization ~ Year + Aspect.Ratio, data = df, priors = priors)
preds1 <- predict(mod1, df)
table(df[,3], preds1)
preds1
table(df[,3], preds1$class)
mod2 <- lda(Civilization ~ Year + Aspect.Ratio, data = df, priors = priors)
preds2 <- predict(mod2, df)
table(df[,3], preds2$class)
mod2 <- qda(Civilization ~ Year + Aspect.Ratio, data = df, priors = priors)
preds2 <- predict(mod2, df)
table(df[,3], preds2$class)
N <- dim(df)[1]
APER1 <- (7 + 6 + 1)/N
APER1
APER2 <- (4 + 1+ 1+ 3)/N
APER2
x11()
plot(df[,1], df[,2], col = factor(preds$class), pch = 16, xlab = 'Temp', ylab = 'Prec')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(temperature=x, precipitation=y)
z  <- predict(tool, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
x11()
plot(df[,1], df[,2], col = factor(preds$class), pch = 16, xlab = 'Temp', ylab = 'Prec')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(temperature=x, precipitation=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
head(df)
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
z
x11()
plot(df[,1], df[,2], col = factor(preds$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
x11()
plot(df[,1], df[,2], col = factor(preds1$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod1, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
dev.off()
newdat <- data.frame(Year = 986, Aspect.Ratio = 1.4)
guess <- predict(mod2, newdat)
guess$class
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
points(986, 1.4, pch = 16, cex = 2, col ='orange')
legend('topleft', levels(df[,3]), pch = 16)
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
legend('topleft', levels(df[,3]), pch = 16)
legend('topleft', levels(df[,3]), pch = 16, col = levels(df[,3]))
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
legend('topleft', levels(df[,3]), pch = 16, col = levels(df[,3]))
points(986, 1.4, pch = 16, cex = 2, col ='orange')
legend('topleft', levels(df[,3]), pch = 16, col = factor(levels(df[,3])))
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
legend('topleft', levels(df[,3]), pch = 16, col = factor(levels(df[,3])))
points(986, 1.4, pch = 16, cex = 2, col ='orange')
dev.off()
x11()
plot(df[,1], df[,2], col = factor(preds2$class), pch = 16, xlab = 'Year', ylab = 'Aspect Ratio')
x  <- seq(min(df[,1]), max(df[,1]), length=300)
y  <- seq(min(df[,2]), max(df[,2]), length=300)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(mod2, xy)$post
z1 <- z[,1] - z[,2]
z2 <- z[,2] - z[,1]
z3 <- z[,3] - z[,2]
z4 <- z[,2] - z[,3]
z5 <- z[,1] - z[,3]
z6 <- z[,3] - z[,1]
contour(x, y, matrix(z1, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z2, 300), levels=0, drawlabels=F, add=T, lty = 6, col = 'blue')
contour(x, y, matrix(z3, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z4, 300), levels=0, drawlabels=F, add=T, lty = 2)
contour(x, y, matrix(z5, 300), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z6, 300), levels=0, drawlabels=F, add=T)
legend('topleft', levels(df[,3]), pch = 16, col = factor(levels(df[,3])))
points(986, 1.4, pch = 16, cex = 2, col ='orange')
dev.off()
df <- read.table('Hotels.txt')
rm(list = ls())
df <- read.table('Hotels.txt')
head(df)
N <- dim(df)[1]
sf <- rep(0,N)
sf <- df$Position == 'Seafront'
sf
sf <- df$Position == 'Seafront'
sf
sf <- df$Position == 'Seafront'
C1.new <- rep(0,N)
C1.new[sf] <- 1
head(df)
levels(Season)
levels(df$Season)
sf <- df$Position == 'Seafront'
C1.new <- rep(0,N)
C1.new[sf] <- 1
white <- df$Season=='WetSeason'
C2.new <- rep(0,N)
C2.new[white] <- 1
# 4 cases:
# females white
FB <- which(C1.new==0 & C2.new==1)
# females not white
FNB <- which(C1.new==0 & C2.new==0)
# males white
MB <- which(C1.new==1 & C2.new==1)
# males not white
MNB <- which(C1.new==1 & C2.new==0)
# colors for the plot
col <- rep(NA,n)
col[FB] <- 'pink'
col[FNB] <- 'red'
col[MB] <- 'light blue'
col[MNB] <- 'blue'
# shape of the dots for the plot
shape <- rep(0,n)
shape[FB] <- 21
shape[FNB] <- 22
shape[MB] <- 23
shape[MNB] <- 24
plot(X, Y, main='Scatterplot Y vs X', lwd=2,
xlab='Years of Service', ylab='Average Score', col = col, pch = shape)
result3 <- lm(Y ~ X + C1.new + C2.new + X:C1.new + X:C2.new)
result3
summary(result3)
result4 <- lm(Y ~ X + C1.new + C2.new + X:C2.new)
result4
summary(result4)
result5 <- lm(Y ~ X + C1.new + C2.new)
result5
summary(result5)
plot(X, Y, main='Scatterplot of Y vs X', lwd=2,
xlab='Years of Service', ylab='Average Score', col = col)
coef <- result5$coef
abline(coef[1],coef[2],lwd=2,col='indianred') # female, nonwhite
abline(coef[1]+coef[3],coef[2],lwd=2,col='cornflowerblue') # male, nonwhite
abline(coef[1]+coef[4],coef[2],lwd=2,col='pink2') # female, white
abline(coef[1]+coef[3]+coef[4],coef[2],lwd=2,col='lightblue3') # male, white
# diagnostics of the residuals
par(mfrow=c(2,2))
plot(result5)
shapiro.test(residuals(result5))
plot(t, price, main='Scatterplot Y vs X', lwd=2,
xlab='Years of Service', ylab='Average Score', col = col, pch = shape)
rm(list = ls())
df <- read.table('Hotels.txt')
head(df)
N <- dim(df)[1]
sf <- df$Position == 'Seafront'
C1.new <- rep(0,N)
C1.new[sf] <- 1
white <- df$Season=='WetSeason'
C2.new <- rep(0,N)
C2.new[white] <- 1
# 4 cases:
# females white
FB <- which(C1.new==0 & C2.new==1)
# females not white
FNB <- which(C1.new==0 & C2.new==0)
# males white
MB <- which(C1.new==1 & C2.new==1)
# males not white
MNB <- which(C1.new==1 & C2.new==0)
# colors for the plot
col <- rep(NA,n)
col[FB] <- 'pink'
col <- rep(NA,N)
col[FB] <- 'pink'
col[FNB] <- 'red'
col[MB] <- 'light blue'
col[MNB] <- 'blue'
# shape of the dots for the plot
shape <- rep(0,N)
shape[FB] <- 21
shape[FNB] <- 22
shape[MB] <- 23
shape[MNB] <- 24
attach(df)
plot(t, price, main='Scatterplot Y vs X', lwd=2,
xlab='Years of Service', ylab='Average Score', col = col, pch = shape)
rm(list = ls())
df <- read.table('Hotels.txt')
head(df)
N <- dim(df)[1]
sf <- df$Position == 'Seafront'
C1.new <- rep(0,N)
C1.new[sf] <- 1
white <- df$Season=='WetSeason'
C2.new <- rep(0,N)
C2.new[white] <- 1
# 4 cases:
# females white
FB <- which(C1.new==0 & C2.new==1)
# females not white
FNB <- which(C1.new==0 & C2.new==0)
# males white
MB <- which(C1.new==1 & C2.new==1)
# males not white
MNB <- which(C1.new==1 & C2.new==0)
# colors for the plot
col <- rep(NA,N)
col[FB] <- 'pink'
col[FNB] <- 'red'
col[MB] <- 'light blue'
col[MNB] <- 'blue'
# shape of the dots for the plot
shape <- rep(0,N)
shape[FB] <- 21
shape[FNB] <- 22
shape[MB] <- 23
shape[MNB] <- 24
detach(df)
attach(df)
plot(t, price, main='Scatterplot Y vs X', lwd=2,
xlab='Years of Service', ylab='Average Score', col = col, pch = shape)
plot(t, price, main='Scatterplot price vs t', lwd=2,
xlab='time of year', ylab='price', col = col, pch = shape)
result3 <- lm(price ~ t + C1.new + C2.new + t:C1.new + t:C2.new)
result3
summary(result3)
I(1 + cos(4*pi*t/365))
result3 <- lm(price ~ I(1 + cos(4*pi*t/365)) + C1.new + C2.new + I(1 + cos(4*pi*t/365)):C1.new + I(1 + cos(4*pi*t/365)):C2.new)
result3
coefs <- coef(result3)
vif(result3)
par(mfrow = c(2,2))
plot(result3)
shapiro.test(result3$residuals)
dev.off()
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), c(0,0))
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), c(0,0))
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), 0)
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), c(0,0))
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), t(c(0,0)))
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), 0)
linearHypothesis(result3, cbind(c(0,0,1,0,0),
c(0,0,0,0,1)), 0)
linearHypothesis(result3, rbind(c(0,0,1,0,0),
c(0,0,0,0,1)), 0,0)
help(linearHypothesis)
result3
linearHypothesis(result3, rbind(c(0,0,0,1,0,0),
c(0,0,0,0,0,1)), c(0,0))
summary(result3)
linearHypothesis(result3, rbind(c(0,0,0,1,0,0),
c(0,0,0,0,0,1)), c(0,0),
conf.level = 0.99) #pvalue < 2.2e-16 la stagionalità sicuramente influisce
linearHypothesis(result3, rbind(c(0,0,0,1,0,0),
c(0,0,0,0,0,1)), c(0,0),
conf.level = 0.01) #pvalue < 2.2e-16 la stagionalità sicuramente influisce
linearHypothesis(result3, rbind(c(0,0,0,1,0,0),
c(0,0,0,0,0,1)), c(0,0),
level = 0.99) #pvalue < 2.2e-16 la stagionalità sicuramente influisce
linearHypothesis(result3, rbind(c(0,0,1,0,0,0),
c(0,0,0,0,1,0)), c(0,0))
summary(result3)
vif(result3)
linearHypothesis(result3, rbind(c(0,0,0,0,0,1),
c(0,0,0,0,1,0)), c(0,0))
summary(result3)
result3 <- lm(price ~ I(1 + cos(4*pi*t/365)) + C1.new + C2.new)
summary(result4)
result4 <- lm(price ~ I(1 + cos(4*pi*t/365)) + C1.new + C2.new)
summary(result4)
vif(result4)
# dinamica temporale influisce
result4 <- lm(price ~ I(1 + cos(4*pi*t/365)) + C1.new + C2.new)
summary(result4)
shapiro.test(result4$residuals)
vif(result4)
par(mfrow = c(2,2))
plot(result4)
coefs <- coef(result4)
year <- 1:365
plot(df[,1],df[,2])
head(df)
plot(df[,1],df[,4])
x11()
plot(df[,1],df[,4])
plot(df[,1],1+cos(4*pi*df[,4]/365))
t.max <- which.max(result4$fitted.values)
t.max
result4$fitted.values
df
max <- predict(result4, df[t.max,])
max <- predict(result4, df[t.max,-4])
head(df)
max <- predict(result4, df[t.max,c(1,2,3)])
df[t.max,c(1,2,3)]
result4
max <- predict(result4, data.frame(t = df[t.max,1], Position = df[t.max,2], Seasion = df[t.max,3]))
data.frame(t = df[t.max,1], Position = df[t.max,2], Seasion = df[t.max,3])
max <- predict(result4, data.frame(t = df[t.max,1], Position = df[t.max,2], Season = df[t.max,3]))
t.max
t.max
df[t.max]
df[t.max,]
data.frame(t = df[t.max,1], Position = df[t.max,2], Season = df[t.max,3])
help(predict)
max <- predict(result4, df, interval = 'confidence', level = 0.99)
max
max[1]
max <- predict(result4, df[t.max,], interval = 'confidence', level = 0.99)
max <- predict(result4, df, interval = 'confidence', level = 0.99)[t.max]
max
max <- predict(result4, df, interval = 'confidence', level = 0.99)
max <- predict(result4, df, interval = 'confidence', level = 0.99)[t.max,]
max
